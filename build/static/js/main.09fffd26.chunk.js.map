{"version":3,"sources":["utils/constants.js","components/App.js","components/Header.js","components/FilesList.js","router/AppRouter.js","index.js"],"names":["API_URL","App","props","useState","file","setFile","previewSrc","setPreviewSrc","title","description","state","setState","errorMsg","setErrorMsg","isPreviewAvailable","setIsPreviewAvailable","dropRef","useRef","handleInputChange","event","target","name","value","updateBorder","dragState","current","style","border","handleOnSubmit","a","preventDefault","trim","formData","FormData","append","axios","post","headers","history","push","response","data","className","Form","onSubmit","Row","Col","Group","controlId","type","placeholder","onChange","onDrop","files","uploadedFile","fileReader","FileReader","onload","result","readAsDataURL","match","onDragEnter","onDragLeave","getRootProps","getInputProps","ref","src","alt","Button","variant","Header","class","activeClassName","to","exact","FilesList","filesList","setFilesList","useEffect","get","getFilesList","downloadFile","id","path","mimetype","responseType","split","filename","length","download","status","map","_id","file_path","file_mimetype","key","href","onClick","colSpan","fontWeight","AppRouter","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09fffd26.chunk.js","sourcesContent":["export const API_URL = 'http://localhost:3030';\n","import React, { useState, useRef } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { API_URL } from \"../utils/constants\";\n\nconst App = (props) => {\n  const [file, setFile] = useState(null); // state for storing actual image\n  const [previewSrc, setPreviewSrc] = useState(\"\"); // state for storing previewImage\n  const [state, setState] = useState({\n    title: \"\",\n    description: \"\",\n  });\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\n\n  const handleInputChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const onDrop = (files) => {\n    const [uploadedFile] = files;\n    setFile(uploadedFile);\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewSrc(fileReader.result);\n    };\n    fileReader.readAsDataURL(uploadedFile);\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\n    dropRef.current.style.border = \"2px dashed #e9ebeb\";\n  };\n\n  const updateBorder = (dragState) => {\n    if (dragState === \"over\") {\n      dropRef.current.style.border = \"2px solid #000\";\n    } else if (dragState === \"leave\") {\n      dropRef.current.style.border = \"2px dashed #e9ebeb\";\n    }\n  };\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { title, description } = state;\n      if (title.trim() !== \"\" && description.trim() !== \"\") {\n        if (file) {\n          const formData = new FormData();\n          formData.append(\"file\", file);\n          formData.append(\"title\", title);\n          formData.append(\"description\", description);\n\n          setErrorMsg(\"\");\n          await axios.post(`${API_URL}/upload`, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          });\n          props.history.push(\"/list\");\n        } else {\n          setErrorMsg(\"Please select a file to add.\");\n        }\n      } else {\n        setErrorMsg(\"Please enter all the field values.\");\n      }\n    } catch (error) {\n      error.response && setErrorMsg(error.response.data);\n    }\n  };\n\n  return (\n    <div className=\"ap\">\n      <Form className=\"search-form\" onSubmit={handleOnSubmit}>\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n        <Row>\n          <Col className=\" container inp\">\n            <Form.Group controlId=\"title\" className=\"webflow-style-input\">\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={state.title || \"\"}\n                placeholder=\"Enter title\"\n                onChange={handleInputChange}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"container inp\">\n            <Form.Group controlId=\"description\" className=\"webflow-style-input\">\n              <input\n                type=\"text\"\n                name=\"description\"\n                value={state.description || \"\"}\n                placeholder=\"Enter description\"\n                onChange={handleInputChange}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n        <div className=\"upload-section\">\n          <Dropzone\n            onDrop={onDrop}\n            onDragEnter={() => updateBorder(\"over\")}\n            onDragLeave={() => updateBorder(\"leave\")}\n          >\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps({ className: \"drop-zone\" })} ref={dropRef}>\n                <input {...getInputProps()} />\n                <p>Drag and drop a file OR click here to select a file</p>\n                {file && (\n                  <div>\n                    <strong>Selected file:</strong> {file.name}\n                  </div>\n                )}\n              </div>\n            )}\n          </Dropzone>\n          {previewSrc ? (\n            isPreviewAvailable ? (\n              <div className=\"image-preview\">\n                <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" />\n              </div>\n            ) : (\n              <div className=\"preview-message\">\n                <p>No preview available for this file</p>\n              </div>\n            )\n          ) : (\n            <div className=\"preview-message\">\n              <p>Image preview</p>\n            </div>\n          )}\n        </div>\n        <Button variant=\"primary\" type=\"submit\" className=\"custom-btn btn-8\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <div>\n      <div className=\"tp\">\n        <div class=\"hero\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12 text-center\">\n                <h3 class=\"animate-charcter\"> Book store</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"header\">\n        {/* <h1>File Upload And Download</h1> */}\n\n        <nav>\n          <NavLink activeClassName=\"active\" to=\"/\" exact={true}>\n            Home\n          </NavLink>\n          <NavLink activeClassName=\"active\" to=\"/list\">\n            Books List\n          </NavLink>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport download from \"downloadjs\";\nimport axios from \"axios\";\nimport { API_URL } from \"../utils/constants\";\n\nconst FilesList = () => {\n  const [filesList, setFilesList] = useState([]);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  useEffect(() => {\n    const getFilesList = async () => {\n      try {\n        const { data } = await axios.get(`${API_URL}/getAllFiles`);\n        setErrorMsg(\"\");\n        setFilesList(data);\n      } catch (error) {\n        error.response && setErrorMsg(error.response.data);\n      }\n    };\n\n    getFilesList();\n  }, []);\n\n  const downloadFile = async (id, path, mimetype) => {\n    try {\n      const result = await axios.get(`${API_URL}/download/${id}`, {\n        responseType: \"blob\",\n      });\n      const split = path.split(\"/\");\n      const filename = split[split.length - 1];\n      setErrorMsg(\"\");\n      return download(result.data, filename, mimetype);\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setErrorMsg(\"Error while downloading file. Try again later\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"files\">\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n      <table className=\"files-table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Download File</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filesList.length > 0 ? (\n            filesList.map(\n              ({ _id, title, description, file_path, file_mimetype }) => (\n                <tr key={_id}>\n                  <td className=\"file-title\">{title}</td>\n                  <td className=\"file-description\">{description}</td>\n                  <td>\n                    <a\n                      href=\"#/\"\n                      onClick={() =>\n                        downloadFile(_id, file_path, file_mimetype)\n                      }\n                    >\n                      Download\n                    </a>\n                  </td>\n                </tr>\n              )\n            )\n          ) : (\n            <tr>\n              <td colSpan={3} style={{ fontWeight: \"300\" }}>\n                No files found. Please add some.\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default FilesList;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from '../components/App';\nimport Header from '../components/Header';\nimport FilesList from '../components/FilesList';\n\nconst AppRouter = () => (\n  <BrowserRouter>\n    <div className=\"container\">\n      <Header />\n      <div className=\"main-content\">\n        <Switch>\n          <Route component={App} path=\"/\" exact={true} />\n          <Route component={FilesList} path=\"/list\" />\n        </Switch>\n      </div>\n    </div>\n  </BrowserRouter>\n);\n\nexport default AppRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.scss';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n"],"sourceRoot":""}